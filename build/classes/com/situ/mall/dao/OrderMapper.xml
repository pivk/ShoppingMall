<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.situ.mall.dao.OrderMapper">
 <sql id="studentColums">
 
order_item.product_image,order_item.product_name,order_item.quantity,order_item.total_price,`order`.payment_type,`order`.postage,`order`.id,`user`.username,shipping.receiver_name,shipping.receiver_address
 FROM `order` INNER JOIN `user` ON `user`.id=`order`.user_id INNER JOIN shipping ON `order`.shipping_id=shipping.id INNER JOIN order_item ON `order`.order_no=order_item.order_no </sql>
  
   	<resultMap type="Order" id="orderInfo">
		 <id property="id" column="id" />
		 <id property="user_id" column="user_id" />
		 <result property="order_no" column="order_no" />
		 <result property="product_id" column="product_id" /> 
		 <result property="quantity" column="quantity" /> 
		 <result property="total_price" column="total_price" /> 
		 <result property="create_time" column="create_time" /> 
		 <result property="update_time" column="update_time" /> 
		 	<association javaType="User" property="user">
				<result property="username" column="username" />
			</association>
			<association javaType="shipping" property="shipping">
				<result property="receiver_name" column="receiver_name" />
				<result property="receiver_address" column="receiver_address" />
			</association>
		   <collection property="list" ofType="Order_item">
			    <result property="product_name" column="product_name" />
			 	<result property="total_price" column="total_price" /> 
			 	<result property="quantity" column="quantity" /> 
			 	<result property="product_image" column="product_image" /> 
		   </collection>
		
	</resultMap>
  
	
	<select id="seleteBycondition" resultMap="orderInfo" parameterType="map">
		SELECT <include refid="studentColums"/>
		limit #{pageIndex},#{pageSize}
	</select>	
	
	
	
	<select id="selectByName" resultType="order" parameterType="string">
		SELECT <include refid="studentColums"/> WHERE  user.name like '%${name}%'
	</select>
	
	<select id="seleteAll" resultMap="orderInfo">
		SELECT <include refid="studentColums"/>
	</select>

	<select id="getTotalCount1" resultType="integer" parameterType="map">
		select count(*) FROM 
	 FROM `order` INNER JOIN `user` ON `user`.id=`order`.user_id INNER JOIN shipping ON `order`.shipping_id=shipping.id INNER JOIN order_item ON `order`.order_no=order_item.order_no 

	</select>

		
	<select id="getTotalCount" resultType="integer">
		select count(*)  FROM `order` INNER JOIN `user` ON `user`.id=`order`.user_id INNER JOIN shipping ON `order`.shipping_id=shipping.id INNER JOIN order_item ON `order`.order_no=order_item.order_no 



	</select>
	

	
	
	<select id="pagelist" resultMap="orderInfo" parameterType="map">
		SELECT <include refid="studentColums"/> limit #{pageindex},#{pageSize}
	</select>


	<insert id="insert" parameterType="order">
           INSERT `order`(order_no,user_id,shipping_id,payment,payment_type,postage,status,create_time,update_time ) VALUES 
		 (#{order_no},#{user_id},#{shipping_id},#{payment},#{payment_type},#{postage},#{status},now(),now())
	</insert>



	<select id="getById"  resultMap="orderInfo" parameterType="Integer">
		select  <include refid="studentColums"/> where  user.id=#{id}
	</select>


	<update id="update" parameterType="order">
		update category
		<set>
		   <if test="name!=null and !&quot;&quot;.equals(name.trim())">
		      name=#{name},
		   </if>
		   <if test="category_id!=null">
		      category_id=#{category_id},
		   </if>
		   <if test="subtitle!=null">
		      subtitle=#{subtitle},
		   </if>
		   <if test="main_image!=null">
		      main_image=#{main_image},
		   </if>
		   <if test="sub_images!=null">
		      sub_images=#{sub_images},
		   </if>
		   <if test="detail!=null">
		      detail=#{detail},
		   </if>
		   <if test="price!=null">
		      price=#{price},
		   </if>
		   <if test="stock!=null">
		      stock=#{stock},
		   </if>
		   <if test="status!=null">
		     status=#{status},
		   </if>
		   <if test=" update_time==null">
             update_time=now(),		  
		  </if>
		
		</set>
		where id=#{id}
	</update>


	<delete id="deleteAll">
		delete from order
		<where>
			id in
			<foreach collection="array" item="id" separator="," open="("
				close=")">
				#{id}
			</foreach>
		</where>
	</delete>
	
	<delete id="delete" parameterType="int">
		delete from order where id=#{id}
	</delete>

	
	

</mapper>