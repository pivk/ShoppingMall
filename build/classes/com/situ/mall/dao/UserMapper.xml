<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.situ.mall.dao.UserMapper">

 <sql id="studentColums">
 id,username,`password`,email,phone,question,answer,role,create_time,update_time FROM `user`
 </sql>

	<select id="seleteBycondition" resultType="User" parameterType="map">
		SELECT <include refid="studentColums"/>
		<where>
		  <if test="name!=null">
		   and  name like '%${name}%'
		  </if>
		</where>  
		limit #{pageIndex},#{pageSize}
	</select>	
	
	<select id="seleteByusername" resultType="User" parameterType="user">
		SELECT <include refid="studentColums"/>    where  username=#{username} and password=#{password} 
	</select>	
	
	<select id="seleteAll" resultType="User">
		SELECT <include refid="studentColums"/> 
	</select>

	<select id="getTotalCount1" resultType="integer" parameterType="map">
		select count(*) FROM user where name like "#${name}%"
	</select>

		
	<select id="getTotalCount" resultType="integer">
		select count(*) FROM user 
	</select>
	

	
	
	<select id="pagelist" resultType="User" parameterType="map">
		SELECT <include refid="studentColums"/> limit #{pageindex},#{pageSize}
	</select>


	<insert id="insert" parameterType="User">
		insert  user(username,password,email,phone,question,answer,role,create_time,update_time)
		 values (#{username},#{password},#{email},#{phone},#{question},#{answer},#{role},now(),now())
	</insert>


	<select id="getById"  resultType="User" parameterType="Integer">
		select  <include refid="studentColums"/> where p.id=#{id}
	</select>


	<update id="update" parameterType="User">
		update user
		<set>
		   <if test="username!=null and !&quot;&quot;.equals(username.trim())">
		     username=#{username},
		   </if>
		   <if test="password!=null">
		     password=#{password},
		   </if>
		   <if test="email!=null">
		      email=#{email},
		   </if>
		   <if test="phone!=null">
		      phone=#{phone},
		   </if>
		   <if test="question!=null">
		      question=#{question},
		   </if>
		   <if test="answer!=null">
		      answer=#{answer},
		   </if>
		   <if test="role!=null">
		      role=#{role},
		   </if>
	
		   <if test=" update_time==null">
             update_time=now(),		  
		  </if>
		
		</set>
		where id=#{id}
	</update>


	<delete id="deleteAll">
		delete from user
		<where>
			id in
			<foreach collection="array" item="id" separator="," open="("
				close=")">
				#{id}
			</foreach>
		</where>
	</delete>
	
	<delete id="delete" parameterType="int">
		delete from user where id=#{id}
	</delete>

	
	

</mapper>