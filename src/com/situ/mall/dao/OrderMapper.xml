<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.situ.mall.dao.OrderMapper">
 <sql id="studentColums">
SELECT `order`.*, shipping.receiver_address,`user`.username  FROM `order`INNER JOIN `user`  ON `order`.user_id=`user`.id INNER JOIN shipping on `order`.shipping_id=shipping.id
 </sql>

	<resultMap type="order" id="orderInfo">
		 <id property="id" column="id" />
		 <id property="order_no" column="order_no" />
		 <result property="user_id" column="user_id" />
		 <result property="shipping_id" column="shipping_id" />
		 <result property="payment" column="payment" />
		 <result property="payment_type" column="payment_type" />
		 <result property="postage" column="postage" />
		 <result property="status" column="status" />
		 <result property="payment_time" column="payment_time" />
		 <result property="status" column="status" />
		 <result property="end_time" column="end_time" />
		 <result property="status" column="status" />
		 <result property="close_time" column="close_time" />
		 <result property="create_time" column="create_time" /> 
		 <result property="update_time" column="update_time" /> 
			<association javaType="User" property="user">
				<result property="name" column="username" />
			</association>
			<association javaType="Shipping" property="shipping">
				<result property="receiver_address" column="receiver_address" />
			</association>
	</resultMap>
	
	<select id="seleteBycondition" resultMap="orderInfo" parameterType="map">
		SELECT <include refid="studentColums"/>
		<where>
		  <if test="name!=null">
		   and   user.name like '%${name}%'
		  </if>
		</where>  
		limit #{pageIndex},#{pageSize}
	</select>	
	
	
	
	<select id="selectByName" resultType="order" parameterType="string">
		SELECT <include refid="studentColums"/> WHERE  user.name like '%${name}%'
	</select>
	
	<select id="seleteAll" resultMap="orderInfo">
		SELECT <include refid="studentColums"/>
	</select>

	<select id="getTotalCount1" resultType="integer" parameterType="map">
		select count(*) FROM 
		`order`INNER JOIN `user`  ON `order`.user_id=`user`.id INNER JOIN shipping on `order`.shipping_id=shipping.id
		 where  user.name like "#${name}%"
	</select>

		
	<select id="getTotalCount" resultType="integer">
		select count(*) FROM `order`INNER JOIN `user`  ON `order`.user_id=`user`.id INNER JOIN shipping on `order`.shipping_id=shipping.id
	</select>
	

	
	
	<select id="pagelist" resultMap="orderInfo" parameterType="map">
		SELECT <include refid="studentColums"/> limit #{pageindex},#{pageSize}
	</select>


	<insert id="insert" parameterType="order">
		insert  order(order_no,user_id,shipping_id,payment,payment_type,postage,status,payment_time,send_time,create_time,end_time,close_time,create_time,update_time)
		 values (#{order_no},#{user_id},#{shipping_id},#{payment},#{payment_type},#{postage},#{status},#{payment_time},#{send_time},#{end_time},#{close_time},now(),now())
	</insert>


	<select id="getById"  resultMap="orderInfo" parameterType="Integer">
		select  <include refid="studentColums"/> where  user.id=#{id}
	</select>


	<update id="update" parameterType="order">
		update category
		<set>
		   <if test="name!=null and !&quot;&quot;.equals(name.trim())">
		      name=#{name},
		   </if>
		   <if test="category_id!=null">
		      category_id=#{category_id},
		   </if>
		   <if test="subtitle!=null">
		      subtitle=#{subtitle},
		   </if>
		   <if test="main_image!=null">
		      main_image=#{main_image},
		   </if>
		   <if test="sub_images!=null">
		      sub_images=#{sub_images},
		   </if>
		   <if test="detail!=null">
		      detail=#{detail},
		   </if>
		   <if test="price!=null">
		      price=#{price},
		   </if>
		   <if test="stock!=null">
		      stock=#{stock},
		   </if>
		   <if test="status!=null">
		     status=#{status},
		   </if>
		   <if test=" update_time==null">
             update_time=now(),		  
		  </if>
		
		</set>
		where id=#{id}
	</update>


	<delete id="deleteAll">
		delete from order
		<where>
			id in
			<foreach collection="array" item="id" separator="," open="("
				close=")">
				#{id}
			</foreach>
		</where>
	</delete>
	
	<delete id="delete" parameterType="int">
		delete from order where id=#{id}
	</delete>

	
	

</mapper>